imports:
    - { resource: "@SyliusCoreBundle/Resources/config/app/config.yml" }

    - { resource: "@SyliusAdminBundle/Resources/config/app/config.yml" }
    - { resource: "@SyliusApiBundle/Resources/config/app/config.yaml" }

    - { resource: "@SyliusShopBundle/Resources/config/app/config.yml" }
    - { resource: "@SyliusPayPalPlugin/Resources/config/config.yaml" }

parameters:
    sylius_core.public_dir: '%kernel.project_dir%/public'

sylius_shop:
    product_grid:
        include_all_descendants: true

sylius_theme:
    sources:
        filesystem:
            scan_depth: 1
            directories:
                - "%kernel.project_dir%/themes"
                
sylius_resource:
    resources:
        app.supplier:
            classes:
                model: App\Entity\Supplier
                interface: App\Entity\SupplierInterface
                form: App\Form\Type\SupplierType
                repository: App\Repository\SupplierRepository

sylius_product:
   resources:
        product:
            classes:
                model: App\Entity\Product
                interface: App\EntityProductInterface
sylius_grid:
    grids:
        app_admin_supplier:
            driver:
                name: doctrine/orm
                options:
                    class: "%app.model.supplier.class%"
                    repository: createListQueryBuilder
            sorting:
                id: asc
            fields:
                id:
                    type: string
                    label: id
                    sortable: ~
                name:
                    type: string
                    label: Name
                    sortable: ~
                description:
                    type: string
                    label: Description
                    sortable: ~
            filters:
                search:
                    type: string
                    label: Search
                    options:
                        fields: [name, description]
            actions:
                main:
                    create:
                        type: create
                item:
                    update:
                        type: update
                    delete:
                        type: delete
                bulk:
                    delete:
                        type: delete
                    
winzou_state_machine:
    sylius_order:
        callbacks:
            after:
                send_order_notification:
                    on: ["create"]
                    do: ["@app.email_manager.order_notification","notify"]
                    args: ["object"]
                    
sylius_mailer:
    emails:
        order_notification:
            subject: app.ui.new_order
            template: "App/Admin/Email/orderNotification.html.twig"
                    
